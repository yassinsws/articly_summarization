name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Frontend Build
  frontend:
    name: Frontend Build
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: TypeScript check
      run: npm run type-check
    
    - name: Build application
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/
        retention-days: 7

  # Backend Build
  backend:
    name: Backend Build
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./my-strapi-project
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: my-strapi-project/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build Strapi application
      env:
        NODE_ENV: production
        DATABASE_CLIENT: sqlite
        DATABASE_FILENAME: ./tmp/data.db
        JWT_SECRET: test-jwt-secret
        ADMIN_JWT_SECRET: test-admin-jwt-secret
        APP_KEYS: test-app-keys
        API_TOKEN_SALT: test-api-token-salt
        TRANSFER_TOKEN_SALT: test-transfer-token-salt
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: ./my-strapi-project/build/
        retention-days: 7

  # Summary
  summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    
    steps:
    - name: Build Summary
      run: |
        echo "âœ… Frontend build completed successfully"
        echo "âœ… Backend build completed successfully"
        echo "ðŸŽ‰ All components built successfully!"